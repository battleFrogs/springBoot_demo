<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <settings>
        <setting name="callSettersOnNulls" value="true"/>
        <setting name="cacheEnabled" value="true"/><!-- 所有映射器中配置的缓存的全局开关 -->
        <setting name="lazyLoadingEnabled" value="true"/><!-- 延迟加载的全局开关，当开启时，所有关联对象都会延迟加载，特定关联关系中可以通过
     设置fetchType属性来覆盖该项的开关的状态-->
        <setting name="aggressiveLazyLoading" value="true"/><!-- 当启用时，带有延迟加载属性的对象的加载与否完全取决与对任意延迟属性的调用；反之每种属性将按需加载 -->
        <setting name="multipleResultSetsEnabled" value="true"/> <!-- 是否允许单一语句返回多结果集（需要兼容驱动） -->
        <setting name="useColumnLabel" value="true"/>  <!-- 别名代替列名，用来自定义字段映射 -->
        <setting name="useGeneratedKeys" value="false"/>  <!-- 允许JDBC支持自动生成主键，需要驱动兼容。
                                                            如果设置为true则这个设置强制使用自动生成主键 -->
        <setting name="autoMappingBehavior" value="PARTIAL"/> <!-- 默认是PARTIAL，只会自动映射没有定义嵌套结果集映射的结果集
                                                                    映射文件中，对于resultMap标签，如果没有显式定义result标签，mybatis不会帮你把结果映射到model(pojo)上-->
        <setting name="defaultExecutorType" value="SIMPLE"/>  <!-- 	配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>  <!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。	 -->
        <setting name="localCacheScope" value="SESSION"/> <!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。	 -->
        <setting name="jdbcTypeForNull" value="NULL"/>  <!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。	 -->

    </settings>

    <typeAliases>
        <typeAlias alias="Integer" type="java.lang.Integer" />
        <typeAlias alias="Long" type="java.lang.Long" />
        <typeAlias alias="HashMap" type="java.util.HashMap" />
        <typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap" />
        <typeAlias alias="ArrayList" type="java.util.ArrayList" />
        <typeAlias alias="LinkedList" type="java.util.LinkedList" />
    </typeAliases>
</configuration>